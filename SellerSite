package Interface;

import customer.Customer;
import java.util.ArrayList;
import java.util.Scanner;
import product.Product;
import product.ProductDatabase;
import product.ProductManagement;
import Interface.Notification;
import customer.CustomerManagement;

public class SellerSite{
    private Customer customer;
    private Scanner scanner;
    private ProductManagement productManagement;  

    public SellerSite(Customer customer, Scanner scanner) {
        this.customer = customer;
        this.scanner=scanner;
        this.productManagement = new ProductDatabase().loadFile();
        start();
    }
    
   private void Transactionlist(){
        System.out.println("-------------------------------------------------------------------------");
        System.out.println("~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ Transaction List  ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~");
        System.out.println("-------------------------------------------------------------------------");    
        System.out.println("Products : ");
                
        ArrayList<Product> sellerProducts =  productManagement.returnSellerProduct(customer);
        for (int i = 0; i < sellerProducts.size(); i++) {
        String name =  sellerProducts.get(i).getName();
        System.out.println( i+1+". "+name);    
    }
        System.out.print("\nSelect the product (Enter 1-5) to get the details : ");    
        int choose= scanner.nextInt();
        int select=-1;
        select+=choose;
        listDetails(select,sellerProducts);
        
        
    }
   
    private void listDetails(int a,ArrayList<Product>sellerProducts){
        System.out.println("-------------------------------------------------------------------------");
        System.out.println("~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ Transaction details  ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~");
        System.out.println("-------------------------------------------------------------------------");  

        System.out.println("Product : "+sellerProducts.get(a).getName() );
        System.out.println("Stock : "+ sellerProducts.get(a).getStock());
        System.out.println("Sold : "+ sellerProducts.get(a).getSalesVolume());
        System.out.println(" ");
        start();

    }
   
    private void notificationPanel(){
        Notification newnotification= new Notification(23914201,39124051,5); 
        System.out.println("");
        System.out.println("-------------------------------------------------------------------------");
        System.out.println("~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ Notification panel ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~");
        System.out.println("-------------------------------------------------------------------------");    
        System.out.println("");
        
        
        int customerID = newnotification.getcustomerID();
        int productID = newnotification.getproductID();
        int order = newnotification.getorder();
        
        //CustomerManagement customerManage = new CustomerManagement();
        Customer customer =  new CustomerManagement().searchSellerById(customerID);
      
        
         //ProductManagement productManagement = new ProductDatabase().loadFile();
        Product product = this.productManagement.searchProductByID(productID);
       
        
        System.out.printf("%-16s%-30s%-7s","Customer","Product", "Order" );
        System.out.printf("\n%-16s%-30s%-7d", customer.getUsername(), product.getName(), order );
        System.out.println(" ");
        System.out.println(" ");
        start();
        
        
    }
    
    private void start() {
        System.out.println("-------------------------------------------------------------------------");
        System.out.println("~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ Seller Site ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~");
        System.out.println("-------------------------------------------------------------------------");
        
        int temp;     
        System.out.println("1. Transaction list\n2. Notification panel");
        System.out.print("\nEnter 1 or 2 : ");
        temp=scanner.nextInt();
        
        switch (temp) {
            case 1:
                Transactionlist();
                break;
            case 2:
                notificationPanel();
                break;
            default:
                throw new AssertionError();
        }
        
     
    }
}
